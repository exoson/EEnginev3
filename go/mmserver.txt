api/proto/v1/mmserver.proto

cmd/mmserver/main.go
parse input and start the thing

pkg/mmserver/matchmakingserver.go
implementation for grpc service calls

pkg/mmserver/persistence/database.go
pkg/mmserver/persistence/player.go
pkg/mmserver/persistence/match.go
pkg/mmserver/persistence/server.go
pkg/mmserver/test/(integration tests)

----api----
confirmation {
  bool ok;
}
player {
  uuid id;
  string nickname;
  string password;
  int elo;
}
updateplayerrequest {
  player player;
  string newpassword;
}
match {
  uuid id;
  repeated player team1;
  repeated player team2;
  server server;
}
matchresult {
  uuid matchid;
  int result;
}
server {
  string ip;
}

service {
  createplayer(player) player
  updateplayer(updateplayerrequest) player

  requestmatch(player) match
  hostmatch(server) match

  uploadresult(matchresult) confirmation
}

----database----
tables: player, match

player: (id), nickname, passwordhash, elo
match: (id), player1_id, player2_id, server_id, result, ended
